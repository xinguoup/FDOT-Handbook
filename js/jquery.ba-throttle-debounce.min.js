/*
 * jQuery throttle / debounce - v1.1 - 3/7/2010
 * http://benalman.com/projects/jquery-throttle-debounce-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function (b, c) {
    var $ = b.jQuery || b.Cowboy || (b.Cowboy = {}),
        a;

    $.throttle = a = function (delay, noTrailing, callback, debounceMode) {
        var timeoutID,
            lastExec = 0;

        if (typeof noTrailing !== "boolean") {
            debounceMode = callback;
            callback = noTrailing;
            noTrailing = c;
        }

        function wrapper() {
            var self = this,
                elapsed = +new Date() - lastExec,
                args = arguments;

            function exec() {
                lastExec = +new Date();
                callback.apply(self, args);
            }

            function clear() {
                timeoutID = c;
            }

            if (debounceMode && !timeoutID) {
                exec();
            }

            if (timeoutID) clearTimeout(timeoutID);

            if (debounceMode === c && elapsed > delay) {
                exec();
            } else if (noTrailing !== true) {
                timeoutID = setTimeout(
                    debounceMode ? clear : exec,
                    debounceMode === c ? delay - elapsed : delay
                );
            }
        }

        if ($.guid) {
            wrapper.guid = callback.guid = callback.guid || $.guid++;
        }

        return wrapper;
    };

    $.debounce = function (delay, atBegin, callback) {
        return callback === c
            ? a(delay, atBegin, false)
            : a(delay, callback, atBegin !== false);
    };
})(this);
